// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[9..11], a=loadrama, b=loadramb, c=loadramc, d=loadramd, e=loadrame, f=loadramf, g=loadramg, h=loadramh);

    RAM512(in=in, load=loadrama, address=address[0..8], out=rega);
    RAM512(in=in, load=loadramb, address=address[0..8], out=regb);
    RAM512(in=in, load=loadramc, address=address[0..8], out=regc);
    RAM512(in=in, load=loadramd, address=address[0..8], out=regd);
    RAM512(in=in, load=loadrame, address=address[0..8], out=rege);
    RAM512(in=in, load=loadramf, address=address[0..8], out=regf);
    RAM512(in=in, load=loadramg, address=address[0..8], out=regg);
    RAM512(in=in, load=loadramh, address=address[0..8], out=regh);
    
    Mux8Way16(a=rega, b=regb, c=regc, d=regd, e=rege, f=regf, g=regg, h=regh, sel=address[9..11], out=out);
}